# Copyright (C) 2021 SailPoint Technologies, Inc.  All rights reserved.

name: prb

on:
  pull_request:
    branches:
      - master
jobs:
  build-unittest:
    name: build-test-pack-node${{ matrix.node }}
    runs-on: ubuntu-latest
    defaults:
       run:
         shell: bash

    strategy:
      matrix:
        node: [ '16' ]

    steps:
      - name: Workflow context details
        run: |
          echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
          echo "üí° Job name is ${{ github.job }} and workflow name is ${{ github.workflow }}"
          echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "üîé The name of branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository
        uses: actions/checkout@v2.3.4
        with:
          persist-credentials: false
      - name: Repository clone confirmation
        run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - name: Setup Node.js ${{ matrix.node }} runtime
        uses: actions/setup-node@v2.4.0
        with:
          node-version: ${{ matrix.node }}
      - name: Use HTTP instead of SSH for the saas connector sdk repository access
        run: git config --global url."https://${{ secrets.CONNECTOR_SDK_TOKEN }}@github.com/".insteadOf ssh://git@github.com/
      - name: Clean install dependencies and build
        run: |
          npm ci
          npm run build
      - name: Linting
        run: npm run lint
      - name: Prettier check
        run: npm run prettier
      - name: Slack channel notify
        uses: ./.github/actions/slack-notify-action
        if: always()
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          event: ${{ toJson(github.event) }}
          head_ref: ${{ github.head_ref }}
          base_ref: ${{ github.base_ref }}
          job-status: ${{ job.status }}
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel: 'C02GX2NE68H'
